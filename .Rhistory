library(tidyverse)
library(utils)
knitr::opts_chunk$set(echo = TRUE)
openstreest <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD")
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD")
library(tidyverse)
library(utils)
knitr::opts_chunk$set(echo = TRUE)
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD")
View(openstreets)
library(rvest)
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
knitr::opts_chunk$set(echo = TRUE)
View(openstreets)
library(tdygeocoder)
install.packages("tdygeocoder", "geoclient")
install.packages("tdygeocoder")
remotes::install_github("austensen/geoclient@new-api-endpoint")
remotes::install_github("austensen/geoclient@new-api-endpoint")
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
library(tdygeocoder)
install.packages("tdygeocoder")
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
library(tdygeocoder)
?geoclient_api_keys()
library(geoclient)
?geoclient_api_key
geoclient_api_key(key = "1f02b4033c75431bbba245d5e8015a93", install = TRUE)
count(openstreets, Borough)
View(openstreets)
View(openstreets)
?pivot_longer()
intersections <- openstreets %>%
mutate(from_intersection = paste(On.Street, "and", From.Street),
to_intersection = paste(On.Street, and, To.Street))
intersections <- openstreets %>%
mutate(from_intersection = paste(On.Street, "and", From.Street),
to_intersection = paste(On.Street, "and", To.Street))
View(intersections)
?geo_intersection
intersections <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough)
geoclient_api_key(key = "1f02b4033c75431bbba245d5e8015a93", install = TRUE)
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
library(tdygeocoder)
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
library(geoclient)
knitr::opts_chunk$set(echo = TRUE)
geoclient_api_key(key = "1f02b4033c75431bbba245d5e8015a93", install = TRUE)
geoclient_api_key(key = "1f02b4033c75431bbba245d5e8015a93")
intersections <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough)
View(intersections)
View(intersections)
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough)
intersections_to <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough)
?rename()
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude)
distinct(openstreets$Location.or.Partner)
count(openstreets, Borough)
distinct(openstreets$Location.or.Partner)
unique(openstreets$Location.or.Partner)
View(openstreets)
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number())
count(openstreets, Borough)
View(openstreets)
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(id, longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude)
View(intersections_from)
?geo_intersection_data
geo_intersection("21st street", "third avenue", "Brooklyn")
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(input_cross_street_1, input_cross_street_2, input_borough, longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
On.Street = input_cross_street_1,
From.Street = input_cross_street_1,
Borough = input_borough)
intersections_to <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough) %>%
select(input_cross_street_1, input_cross_street_2, input_borough, longitude, latitude) %>%
rename(longitude_to = longitude,
latitude_to = latitude,
On.Street = input_cross_street_1,
To.Street = input_cross_street_1,
Borough = input_borough)
merged <- left_join(openstreets, intersections_from, by = c("On.Street", "From.Street", "Borough"))
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(input_cross_street_1, input_cross_street_2, input_borough, longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
On.Street = input_cross_street_1,
From.Street = input_cross_street_2,
Borough = input_borough)
intersections_to <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough) %>%
select(input_cross_street_1, input_cross_street_2, input_borough, longitude, latitude) %>%
rename(longitude_to = longitude,
latitude_to = latitude,
On.Street = input_cross_street_1,
To.Street = input_cross_street_2,
Borough = input_borough)
merged <- left_join(openstreets, intersections_from, by = c("On.Street", "From.Street", "Borough"))
View(merged)
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = to.lower(borough))
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = to_lower(borough))
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = tolower(borough))
tolower
tolower?
/
?tolower
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = tolower(borough))
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = tolower(Borough))
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = tolower(Borough))
merged <- left_join(openstreets, intersections_from, by = c("On.Street", "From.Street", "Borough"))
View(merged)
merged <- left_join(openstreets, intersections_from, by = c("On.Street", "From.Street", "Borough")) %>%
left_join(openstreets, intersections_to, by = c("On.Street", "To.Street", "Borough"))
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(input_cross_street_1, input_cross_street_2, input_borough, longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number)
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number)
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number)
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number())
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number())
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude,
id = row_number())
intersections_from <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_from = longitude,
latitude_from = latitude) %>%
mutate(id = row_number())
intersections_to <- openstreets %>%
geo_intersection_data(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough) %>%
select(longitude, latitude) %>%
rename(longitude_to = longitude,
latitude_to = latitude) %>%
mutate(id = row_number())
merged <- left_join(openstreets, intersections_from, by = c("id")) %>%
left_join(openstreets, intersections_to, by = c("id"))
library(tidyverse)
library(utils)
library(rvest)
library(stringi)
library(jsonlite)
library(geoclient)
knitr::opts_chunk$set(echo = TRUE)
geoclient_api_key(key = "1f02b4033c75431bbba245d5e8015a93")
openstreets <- read.csv("https://data.cityofnewyork.us/api/views/uiay-nctu/rows.csv?accessType=DOWNLOAD") %>%
mutate(id = row_number(),
Borough = tolower(Borough))
count(openstreets, Borough)
intersections_from <- openstreets %>%
mutate(geo_from = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough))
View(intersections_from)
intersections_from <- openstreets %>%
mutate(geo_from = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough),
lat_from = geo_from$latitude,
geo_to = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough))
View(intersections_from)
intersections <- openstreets %>%
mutate(geo_from = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough),
lat_from = geo_from$latitude,
long_from = geo_from$longitude,
geo_to = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough),
lat_to = geo_to$latitude,
long_to = geo_to$longitude)
intersections <- openstreets %>%
mutate(geo_from = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = From.Street,
borough = Borough),
lat_from = geo_from$latitude,
long_from = geo_from$longitude,
geo_to = geo_intersection(cross_street_1 = On.Street,
cross_street_2 = To.Street,
borough = Borough),
lat_to = geo_to$latitude,
long_to = geo_to$longitude) %>%
select(-geo_from, -geo_to)
View(intersections)
print("test")
exists(paste0(location, "/tract_outcomes_early.csv"))
location <- "C:/Users/patri/Documents/SOI data project" #change this to put the file somewhere on your computer
exists(paste0(location, "/tract_outcomes_early.csv"))
paste0(location, "/tract_outcomes_early.csv")
?exists()
fil.exists(paste0(location, "/tract_outcomes_early.csv"))
file.exists(paste0(location, "/tract_outcomes_early.csv"))
